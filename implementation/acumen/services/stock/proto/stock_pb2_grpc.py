# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from services.stock.proto import stock_pb2 as services_dot_stock_dot_proto_dot_stock__pb2


class StockStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetStockHistory = channel.unary_unary(
        '/Stock/GetStockHistory',
        request_serializer=services_dot_stock_dot_proto_dot_stock__pb2.StockSymbol.SerializeToString,
        response_deserializer=services_dot_stock_dot_proto_dot_stock__pb2.StockHistory.FromString,
        )


class StockServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetStockHistory(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StockServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetStockHistory': grpc.unary_unary_rpc_method_handler(
          servicer.GetStockHistory,
          request_deserializer=services_dot_stock_dot_proto_dot_stock__pb2.StockSymbol.FromString,
          response_serializer=services_dot_stock_dot_proto_dot_stock__pb2.StockHistory.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Stock', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
